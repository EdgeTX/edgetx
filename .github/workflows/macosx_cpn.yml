name: MacOSX Companion

on:
  push:
    branches:
      - 'main'
    tags:
      - v*
    paths:
      - '.github/workflows/macosx_cpn.yml'
      - 'companion/**'
      - 'tools/build-companion.sh'

  pull_request:
    branches:
      - 'main'
    paths:
      - '.github/workflows/macosx_cpn.yml'
      - 'companion/**'
      - 'tools/build-companion.sh'

  workflow_dispatch:

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  QT_VERSION: "5.15.2"

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: macos-13

    steps:
      - name: Select XCode version
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '14.1.0'

      - name: Check out the repo
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Create Build Environment
        # Some projects don't allow in-source building, so create a separate build directory
        # We'll use this as our working directory for all subsequent commands
        run: cmake -E make_directory ${{github.workspace}}/build

      - name: Install Qt
        uses: jdpurcell/install-qt-action@v5
        env:
          AQT_CONFIG: ${{ github.workspace }}/tools/aqt-settings.ini
        with:
          version: ${{ env.QT_VERSION }}
          setup-python: 'false'
          cache: true
          cache-key-prefix: 'install-qt-action-macOS'

      - name: Install dependencies
        run: python3 -m pip install --upgrade pip Pillow lz4 clang jinja2

      - name: Install libusb
        run:  brew install libusb

      - name: Install dfu-util
        run:  brew install dfu-util

      - name: Install SDL2
        run:  brew install SDL2

      - name: Build
        working-directory: ${{github.workspace}}
        shell: bash
        run: |
          mkdir output && \
          tools/build-companion.sh "$(pwd)" "$(pwd)/output/"

      - name: Compose release filename
        # https://stackoverflow.com/questions/58033366/how-to-get-current-branch-within-github-actions
        run: echo "artifact_name=edgetx-cpn-osx-${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: "${{ env.artifact_name }}"
          path:  ${{github.workspace}}/output
          retention-days: 15
