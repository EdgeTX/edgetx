name: Companion

on:
  push:
    branches:
      - 'main'
    tags:
      - v*
    paths:
      - '.github/workflows/companion.yml'
      - 'companion/**'
      - 'tools/build-companion.sh'

  pull_request:
    branches:
      - 'main'
    paths:
      - '.github/workflows/companion.yml'
      - 'companion/**'
      - 'tools/build-companion.sh'

  workflow_dispatch:

jobs:
  build-modules:
    name: WASM Modules
    runs-on: macos-14

    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'
          cache: 'pip' # caching pip dependencies

      - run: python3 -m pip install -r requirements.txt

      - name: Cache WASI SDK
        id: cache-wasi-sdk
        uses: actions/cache@v4
        with:
          path: /opt/wasi-sdk
          key: wasi-sdk-25.0-arm64-macos

      - name: Install WASI SDK
        if: steps.cache-wasi-sdk.outputs.cache-hit != 'true'
        run: |
          curl -L https://github.com/WebAssembly/wasi-sdk/releases/download/wasi-sdk-25/wasi-sdk-25.0-arm64-macos.tar.gz -o wasi-sdk.tar.gz
          tar -xzf wasi-sdk.tar.gz
          sudo mv wasi-sdk-25.0-arm64-macos /opt/wasi-sdk

      - name: Build modules
        shell: bash
        env:
          CMAKE_BUILD_TYPE: 'Release'
        run: |
          mkdir output && \
          tools/build-wasm-modules.sh "$(pwd)" "$(pwd)/output/"

      - name: Compose artifact name
        run: echo "artifact_name=edgetx-modules-${GITHUB_REF##*/}" >> $GITHUB_ENV
        shell: bash

      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: "${{ env.artifact_name }}"
          path:  ${{github.workspace}}/output
          retention-days: 15

  build-linux:
    name: Linux Companion
    runs-on: ubuntu-latest
    if: false

    container:
      image: ghcr.io/edgetx/edgetx-dev:latest
      volumes:
        - ${{ github.workspace }}:/src

    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup and Build
        uses: ./.github/actions/build_companion
        with:
          os: 'linux'

  build-macos:
    name: macOS Companion
    runs-on: macos-14
    if: false

    env:
      CMAKE_OSX_ARCHITECTURES: 'x86_64'
      CMAKE_OSX_DEPLOYMENT_TARGET: '10.15'

    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup and Build
        uses: ./.github/actions/build_companion
        with:
          os: 'macos'
          qt-arch: 'clang_64'

  build-win64:
    name: Windows Companion
    runs-on: windows-2022
    if: false

    env:
      CMAKE_GENERATOR: 'Ninja'
      CXX: 'clang++'
      CC: 'clang'

    defaults:
      run:
        shell: bash

    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup and Build
        uses: ./.github/actions/build_companion
        with:
          os: 'win64'
          qt-arch: 'win64_msvc2022_64'
